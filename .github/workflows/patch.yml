name: Patch

on:
  workflow_dispatch:

jobs:
  patch:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [com.YoStarJP.AzurLane, com.YoStarEN.AzurLane]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          log-accepted-android-sdk-licenses: false
          cmdline-tools-version: "10406996"

      - name: Add Android Build Tools Path
        run: echo "$ANDROID_HOME/build-tools/33.0.0" >> $GITHUB_PATH

      - name: Download apkeep
        uses: robinraju/release-downloader@v1.10
        with:
          repository: EFForg/apkeep
          tag: 0.16.0
          fileName: apkeep-x86_64-unknown-linux-gnu

      - name: Download apktool
        uses: robinraju/release-downloader@v1.10
        with:
          repository: iBotPeaches/Apktool
          tag: v2.9.3
          fileName: apktool_2.9.3.jar

      - name: Setup tools
        run: |
          mv apktool_2.9.3.jar apktool.jar
          mv apkeep-x86_64-unknown-linux-gnu /usr/local/bin/apkeep
          chmod +x /usr/local/bin/apkeep

      - name: Set APK version
        id: apk-version
        run: |
          VERSIONS=($(apkeep -l -a ${{ matrix.package }}))
          echo "VERSION=$(echo ${VERSIONS[-1]})" >> "$GITHUB_OUTPUT"

      - name: Cache APK
        id: cache-apk
        uses: actions/cache@v3
        with:
          key: ${{ matrix.package }}-${{ steps.apk-version.outputs.VERSION }}
          path: ${{ matrix.package }}.apk

      - name: Download APK
        if: ${{ steps.cache-apk.outputs.cache-hit != 'true' }}
        env:
          PACKAGE_NAME: ${{ matrix.package }}
        run: |
          apkeep -a $PACKAGE_NAME .
          unzip -q $PACKAGE_NAME.xapk $PACKAGE_NAME.apk

      - name: Patch APK
        env:
          PACKAGE_NAME: ${{ matrix.package }}
        run: |
          java -jar apktool.jar -q d $PACKAGE_NAME.apk
          cp -r libs/* $PACKAGE_NAME/lib

          PATCH_FILE_NAME="$PACKAGE_NAME/smali_classes2/com/unity3d/player/UnityPlayerActivity.smali"

          INJECT_FUNC_TEXT='\
          .method private static native init(Landroid/content/Context;)V \
          .end method \
          '

          INJECT_EXEC_TEXT='\
          const-string v0, "Emden" \
          invoke-static {v0}, Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V \
          invoke-static {p0}, Lcom/unity3d/player/UnityPlayerActivity;->init(Landroid/content/Context;)V \
          '
          sed -i "/\.method protected onCreate/i$INJECT_FUNC_TEXT" $PATCH_FILE_NAME
          sed -i "/^\.method protected onCreate/,/^\.end method/s#const/4 v0, 0x1#$INJECT_EXEC_TEXT\n&#" $PATCH_FILE_NAME

          java -jar apktool.jar -q -f b $PACKAGE_NAME -o $PACKAGE_NAME.patched.apk

      - name: Sign APK
        env:
          PACKAGE_NAME: ${{ matrix.package }}
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks
          zipalign -pf 4 $PACKAGE_NAME.patched.apk $PACKAGE_NAME.aligned.apk
          apksigner sign --ks keystore.jks --ks-pass env:KEYSTORE_PASSWORD  $PACKAGE_NAME.aligned.apk
          mv $PACKAGE_NAME.aligned.apk $PACKAGE_NAME.patched.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-${{ steps.apk-version.outputs.VERSION }}
          path: ${{ matrix.package }}.patched.apk
